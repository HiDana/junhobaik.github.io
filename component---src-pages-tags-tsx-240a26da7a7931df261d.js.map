{"version":3,"sources":["webpack:///(webpack)/buildin/module.js","webpack:///./src/components/PostList/index.tsx","webpack:///./src/pages/tags.tsx"],"names":["module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i","PostList","props","posts","useState","showCnt","setShowCnt","currentPostList","setCurrentPostList","throttleScrollHandler","useCallback","throttle","window","outerHeight","document","querySelector","getBoundingClientRect","bottom","prev","length","expendPostList","list","mapToList","map","post","node","excerpt","fields","frontmatter","slug","date","title","tags","update","Number","split","mapTag","tag","key","className","to","useEffect","slice","sort","a","b","af","bf","aDate","Date","includes","bDate","addEventListener","removeEventListener","pageQuery","Tags","group","data","allMarkdownRemark","largeCount","setLargeCount","targetTag","setTargetTag","x","fieldValue","toLocaleLowerCase","y","tagList","g","fontSize","style","Math","round","totalCount","toString","opacity","fontWeight","onClick","href","large","location","hash","id","filter","edges"],"mappings":"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","file":"component---src-pages-tags-tsx-240a26da7a7931df261d.js","sourcesContent":["module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport * as React from 'react';\nimport { useEffect, useState, useCallback } from 'react';\nimport { Link } from 'gatsby';\nimport { throttle } from 'lodash';\n\nimport './postList.scss';\n\ninterface PostListProps {\n  posts: any[];\n}\n\nconst PostList = (props: PostListProps) => {\n  const { posts } = props;\n  const [showCnt, setShowCnt] = useState(0);\n  const [currentPostList, setCurrentPostList] = useState<JSX.Element[]>([]);\n\n  const throttleScrollHandler = useCallback(\n    throttle(() => {\n      if (\n        window.outerHeight > (document.querySelector('.post-list') as HTMLDivElement).getBoundingClientRect().bottom\n      ) {\n        setShowCnt((prev: number) => {\n          if (prev >= posts.length) return prev;\n          return prev + 10;\n        });\n      }\n    }, 250),\n    []\n  );\n\n  const expendPostList = useCallback((list: any) => {\n    const mapToList = list.map((post: any) => {\n      const { node } = post;\n      const { excerpt, fields, frontmatter } = node;\n      const { slug } = fields;\n      const { date, title, tags } = frontmatter;\n      let update = frontmatter.update;\n      if (Number(update.split(',')[1]) === 1) update = null;\n\n      const mapTag = tags.map((tag: string) => {\n        if (tag === 'undefined') return;\n\n        return (\n          <div key={`${slug}-${tag}`} className=\"tag\">\n            <span>\n              <Link to={`/tags#${tag}`}>{`#${tag}`}</Link>\n            </span>\n          </div>\n        );\n      });\n\n      return (\n        <li key={slug} className={`post`}>\n          <article>\n            <h2 className=\"title\">\n              <Link to={slug}>{title}</Link>\n            </h2>\n            <div className=\"info\">\n              <div className=\"date-wrap\">\n                <span className=\"date\">{date}</span>\n                {update ? <span className=\"update\">&nbsp;{`(Updated: ${update})`}</span> : null}\n              </div>\n              {tags.length && tags[0] !== 'undefined' ? <span className=\"info-dot\">Â·</span> : null}\n              <ul className=\"tag-list\">{mapTag}</ul>\n            </div>\n            <span className=\"excerpt\">\n              <Link to={slug}>{excerpt}</Link>\n            </span>\n          </article>\n        </li>\n      );\n    });\n\n    setCurrentPostList((prev: JSX.Element[]) => {\n      return [...prev, ...mapToList];\n    });\n  }, []);\n\n  useEffect(() => {\n    expendPostList(posts.slice(currentPostList.length, showCnt));\n  }, [showCnt]);\n\n  useEffect(() => {\n    posts.sort((a: any, b: any) => {\n      const af = a.node.frontmatter;\n      const bf = b.node.frontmatter;\n\n      const aDate = new Date(af.update.includes('0001') ? af.date : af.update);\n      const bDate = new Date(bf.update.includes('0001') ? bf.date : bf.update);\n\n      if (aDate < bDate) return 1;\n      if (aDate > bDate) return -1;\n      return 0;\n    });\n\n    setShowCnt(10);\n\n    window.addEventListener('scroll', throttleScrollHandler);\n\n    return () => {\n      window.removeEventListener('scroll', throttleScrollHandler);\n    };\n  }, []);\n\n  return (\n    <div className=\"post-list\">\n      <ul>{currentPostList}</ul>\n    </div>\n  );\n};\n\nexport default PostList;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/seo';\nimport './styles/tags.scss';\nimport PostList from '../components/PostList';\n\ninterface TagsPageProps {\n  data: any;\n}\n\nconst Tags = (props: TagsPageProps) => {\n  const { data } = props;\n  const { group } = data.allMarkdownRemark;\n\n  const [largeCount, setLargeCount] = useState(0);\n  const [targetTag, setTargetTag] = useState('undefined');\n\n  interface groupItem {\n    fieldValue: string;\n    totalCount: number;\n  }\n\n  group.sort((a: groupItem, b: groupItem) => {\n    const x = a.fieldValue.toLocaleLowerCase();\n    const y = b.fieldValue.toLocaleLowerCase();\n\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n  });\n\n  const tagList: any[] = group.map((g: groupItem) => {\n    const getFontSize = () => {\n      let fontSize = Math.round(50 / (largeCount / g.totalCount)).toString();\n      if (fontSize.length <= 1) fontSize = `0${fontSize}`;\n      return `${Number(fontSize) / 100 + 0.9}rem`;\n    };\n\n    return (\n      <li key={g.fieldValue}>\n        <span\n          className=\"tag-text\"\n          style={{\n            fontSize: g.fieldValue !== 'undefined' ? getFontSize() : '0.9rem',\n            opacity: g.fieldValue === targetTag ? '0.9' : '0.5',\n            fontWeight: g.fieldValue === targetTag ? 'bold' : 'normal',\n          }}\n          onClick={() => {\n            setTargetTag(g.fieldValue);\n          }}\n        >\n          <a href={`#${g.fieldValue}`}>{g.fieldValue}</a>\n        </span>\n      </li>\n    );\n  });\n\n  tagList.sort((a: React.ReactElement) => {\n    if (a.key === 'undefined') return -1;\n    return 0;\n  });\n\n  const getPostList: () => any[] = () => {\n    if (group.filter((g: groupItem) => g.fieldValue === targetTag).length) {\n      return group.filter((g: groupItem) => g.fieldValue === targetTag)[0].edges;\n    }\n    if (group.filter((g: groupItem) => g.fieldValue === 'undefined').length) {\n      return group.filter((g: groupItem) => g.fieldValue === 'undefined')[0].edges;\n    }\n    return [];\n  };\n\n  useEffect(() => {\n    let large = 0;\n    for (const g of group) {\n      if (g.fieldValue !== 'undefined' && g.totalCount > large) large = g.totalCount;\n    }\n    setLargeCount(large);\n  }, [group]);\n\n  useEffect(() => {\n    if (location.hash) setTargetTag(location.hash.split('#')[1]);\n  }, []);\n\n  return (\n    <Layout>\n      <SEO title=\"Tags\" />\n      <div id=\"tags\">\n        <div className=\"tag-list-wrap\">\n          <ul>{tagList}</ul>\n        </div>\n\n        <PostList posts={getPostList()} />\n      </div>\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n        edges {\n          node {\n            excerpt(format: PLAIN)\n            fields {\n              slug\n            }\n            frontmatter {\n              date(formatString: \"MMM DD, YYYY\")\n              update(formatString: \"MMM DD, YYYY\")\n              title\n              tags\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Tags;\n"],"sourceRoot":""}