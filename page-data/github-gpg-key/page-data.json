{"componentChunkName":"component---src-templates-blog-post-index-js","path":"/github-gpg-key/","webpackCompilationHash":"6458cc1665abb123a962","result":{"data":{"site":{"siteMetadata":{"title":"HUNDRED","author":"Junho Baik"}},"markdownRemark":{"id":"e8dfb596-9ecf-5899-a554-b73ece2754ad","html":"<h2>GPG 키 생성하기</h2>\n<p>우선 Homebrew 를 통해 gpg 패키지를 설치한다</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\"language-shell\"><code class=\"language-shell\">$ brew <span class=\"token function\">install</span> gpg</code></pre>\n      </div>\n<p>설치가 완료되면 아래 명령어를 통해 GPG Key 를 생성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\"language-shell\"><code class=\"language-shell\">$ gpg --full-generate-key</code></pre>\n      </div>\n<p>아래 자세한 생성하는 과정이 나와있고, 간단히 요약하면 이러하다.</p>\n<ul>\n<li>암호화 방식 선택 (권장: 1)</li>\n<li>암호화 키 크기 선택 (권장: 4096)</li>\n<li>키 유효기간 설정 (권장: 0) // Enter 입력하여 패스</li>\n<li>이름, 이메일, 코멘트(공란 가능) 입력</li>\n<li>이후 보안 암호 문구 작성 창에서 암호 입력 (이후 첫 commit시 입력하는 암호로 쓰인다)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\"language-shell\"><code class=\"language-shell\">Please <span class=\"token keyword\">select</span> what kind of key you want:\n   <span class=\"token punctuation\">(</span>1<span class=\"token punctuation\">)</span> RSA and RSA <span class=\"token punctuation\">(</span>default<span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">(</span>2<span class=\"token punctuation\">)</span> DSA and Elgamal\n   <span class=\"token punctuation\">(</span>3<span class=\"token punctuation\">)</span> DSA <span class=\"token punctuation\">(</span>sign only<span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">(</span>4<span class=\"token punctuation\">)</span> RSA <span class=\"token punctuation\">(</span>sign only<span class=\"token punctuation\">)</span>\nYour selection? 1\n\n\nRSA keys may be between 1024 and 4096 bits long.\nWhat keysize <span class=\"token keyword\">do</span> you want? <span class=\"token punctuation\">(</span>2048<span class=\"token punctuation\">)</span> 4096\n\n\nPlease specify how long the key should be valid.\n         0 <span class=\"token operator\">=</span> key does not expire\n      <span class=\"token operator\">&lt;</span>n<span class=\"token operator\">></span>  <span class=\"token operator\">=</span> key expires <span class=\"token keyword\">in</span> n days\n      <span class=\"token operator\">&lt;</span>n<span class=\"token operator\">></span>w <span class=\"token operator\">=</span> key expires <span class=\"token keyword\">in</span> n weeks\n      <span class=\"token operator\">&lt;</span>n<span class=\"token operator\">></span>m <span class=\"token operator\">=</span> key expires <span class=\"token keyword\">in</span> n months\n      <span class=\"token operator\">&lt;</span>n<span class=\"token operator\">></span>y <span class=\"token operator\">=</span> key expires <span class=\"token keyword\">in</span> n years\nKey is valid for? <span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">)</span>\n\n\nGnuPG needs to construct a user ID to identify your key.\n\nReal name: Junho Baik\nEmail address: junhobaik@gmail.com\nComment:\nYou selected this USER-ID:\n    <span class=\"token string\">\"Junho Baik &lt;junhobaik@gmail.com>\"</span>\n\nChange <span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">)</span>ame, <span class=\"token punctuation\">(</span>C<span class=\"token punctuation\">)</span>omment, <span class=\"token punctuation\">(</span>E<span class=\"token punctuation\">)</span>mail or <span class=\"token punctuation\">(</span>O<span class=\"token punctuation\">)</span>kay/<span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">)</span>uit? O</code></pre>\n      </div>\n<p>위의 과정을 마치고 나면 키가 생성되었고,</p>\n<p>이제 아래 명령어(<code class=\"language-text\">gpg --list-secret-keys --keyid-format LONG</code>)를 이용하여 생성한 Public Key, Secret Key 를 확인한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\"language-shell\"><code class=\"language-shell\">$ gpg --list-secret-keys --keyid-format LONG\n\n-----------------------------------\nsec   rsa4096/ABCDE12345678900 2018-10-24 <span class=\"token punctuation\">[</span>SC<span class=\"token punctuation\">]</span>\n      AFWAEGWEGWAEDVADKAWGJIWRGLWJRGAIWALGRHRG\nuid                 <span class=\"token punctuation\">[</span>ultimate<span class=\"token punctuation\">]</span> Junho Baik <span class=\"token operator\">&lt;</span>junhobaik@gmail.com<span class=\"token operator\">></span>\nssb   rsa4096/AGRJIWGJWRGJIRWG 2018-10-24 <span class=\"token punctuation\">[</span>E<span class=\"token punctuation\">]</span></code></pre>\n      </div>\n<p>위의 예제에서 <code class=\"language-text\">ABCDE12345678900</code> 부분을 복사하고 아래 명령어에 넣는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\"language-shell\"><code class=\"language-shell\">$ gpg --armor --export ABCDE12345678900</code></pre>\n      </div>\n<p>위 명령어를 입력한 후 나오는 키를 복사한다,<br>\n<code class=\"language-text\">-----BEGIN PGP PUBLIC KEY BLOCK-----</code>부터 <code class=\"language-text\">-----END PGP PUBLIC KEY BLOCK——.</code>를 포함해서 모두 복사하여야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\"language-shell\"><code class=\"language-shell\"> -----BEGIN PGP PUBLIC KEY BLOCK-----\n\n // Key Code<span class=\"token punctuation\">..</span>.\n\n -----END PGP PUBLIC KEY BLOCK-----.</code></pre>\n      </div>\n<h2>GitHub 에 GPG Key 등록</h2>\n<p>GitHub - Settings - <a href=\"https://github.com/settings/keys\">SSH and GPG keys</a></p>\n<p>위의 메뉴로 진입하여 GPG Keys 부분의 new GPG key 버튼을 클릭하고 복사한 키를 등록한다.</p>\n<h2>Git 에 GPG Key 등록</h2>\n<p>아래 명령어를 통해 <code class=\"language-text\">~/.gitconfig</code>에 gpg 정보를 입력한다.</p>\n<p>여기서 <code class=\"language-text\">ABCDE12345678900</code>에 해당하는 것은 위에서 확인한 Key 부분이며, 본인의 것을 입력한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> config --global user.signingkey ABCDE12345678900</code></pre>\n      </div>\n<p>이제 등록이 되었고, 이후 commit 부터는 <code class=\"language-text\">-S</code> 플래그를 넣음으로 서명을 적용한 Commit 을 보낼 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> commit -S</code></pre>\n      </div>\n<p>아래 명령어를 이용하면 <code class=\"language-text\">-S</code> 플래그를 번번히 넣지 않아도 항상 서명이 적용한 Commit 을 보내게 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> config --global commit.gpgsign <span class=\"token boolean\">true</span></code></pre>\n      </div>\n<h2>Mac에서 Commit이 안될때</h2>\n<p>글쓴이는 아래와 같은 방법으로 해결했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\"language-shell\"><code class=\"language-shell\">$ brew <span class=\"token function\">install</span> pinentry-mac</code></pre>\n      </div>\n<p>pinentry-mac 설치</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">vi</span> ~/.bashrc</code></pre>\n      </div>\n<p>.bashrc에 <code class=\"language-text\">export GPG_TTY=$(tty)</code>를 추가한다.</p>\n<p>추가로 키 생성 및 관리에는 GPG Suite를 쓰시면 편리합니다.\n설치 링크: <a href=\"https://gpgtools.org\">GPG Suite</a></p>\n<hr>\n<h3>References</h3>\n<ul>\n<li><a href=\"https://help.github.com/articles/generating-a-new-gpg-key/\">Generating a new GPG key</a></li>\n<li><a href=\"https://medium.com/@Makart/github%EC%97%90%EC%84%9C-gpg-%EC%84%9C%EB%AA%85%ED%95%98%EA%B8%B0-for-os-x-4f45ad8f1a49\">GitHub 에서 GPG 서명하기 (for OS X)</a></li>\n</ul>","excerpt":"GPG 키 생성하기우선 Homebrew 를 통해 gpg 패키지를 설치한다설치가 완료되면 아래 명령어를 통해 GPG Key 를 생성한다.아래 자세한 생성하는 과정이 나와있고, 간단히 요약하면 이러하다.암호화 방식 선택 (권장:…","frontmatter":{"title":"GitHub에 GPG 서명 등록하기 (macOS)","date":"2018-10-24","tags":["github"],"keywords":["Github gpg","github gpg key"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/github-gpg-key/","previous":{"fields":{"slug":"/github-system-status/"},"frontmatter":{"title":"GitHub 서버 오류, 시스템 이상할 때 상태를 확인하기","tags":["git","github"],"published":true}},"next":{"fields":{"slug":"/react-16-fragments/"},"frontmatter":{"title":"React 16, Fragments","tags":["react"],"published":true}}}}}