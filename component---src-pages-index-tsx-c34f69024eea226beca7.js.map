{"version":3,"sources":["webpack:///./src/components/Bio/index.tsx","webpack:///./src/pages/index.tsx","webpack:///(webpack)/buildin/module.js","webpack:///./src/components/PostList/index.tsx"],"names":["Bio","comment","config","name","company","location","email","website","linkedin","facebook","instagram","github","className","icon","faUserCircle","faAddressCard","faMapMarkerAlt","faAt","href","faLink","target","rel","siteUrl","faRss","faLinkedin","faFacebook","faInstagram","faGithub","pageQuery","IndexPage","props","posts","data","allMarkdownRemark","edges","Layout","title","PostList","length","to","faSearch","module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i","useState","showCnt","setShowCnt","throttleScrollHandler","useCallback","throttle","window","outerHeight","document","querySelector","getBoundingClientRect","bottom","prev","useEffect","addEventListener","removeEventListener","sort","a","b","af","node","frontmatter","bf","aDate","Date","update","includes","date","bDate","mapPost","map","post","excerpt","fields","slug","tags","Number","split","mapTag","tag","key"],"mappings":"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","file":"component---src-pages-index-tsx-c34f69024eea226beca7.js","sourcesContent":["import * as React from 'react';\nimport { FontAwesomeIcon as Fa } from '@fortawesome/react-fontawesome';\nimport { faUserCircle, faAt, faMapMarkerAlt, faLink, faAddressCard, faRss } from '@fortawesome/free-solid-svg-icons';\nimport { faFacebook, faInstagram, faLinkedin, faGithub } from '@fortawesome/free-brands-svg-icons';\n\nimport './bio.scss';\nimport config from '../../../_config';\n\nconst Bio = () => {\n  const { comment, name, company, location, email, website, linkedin, facebook, instagram, github } = config;\n\n  return (\n    <div className=\"bio\">\n      {!comment ? null : <span className=\"comment\">{comment}</span>}\n\n      {!name ? null : (\n        <div className=\"bio-item name\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faUserCircle} />\n          </div>\n          <span>{name}</span>\n        </div>\n      )}\n\n      {!company ? null : (\n        <div className=\"bio-item company\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faAddressCard} />\n          </div>\n          <span>{company}</span>\n        </div>\n      )}\n\n      {!location ? null : (\n        <div className=\"bio-item location\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faMapMarkerAlt} />\n          </div>\n          <span>{location}</span>\n        </div>\n      )}\n\n      {!email ? null : (\n        <div className=\"bio-item email\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faAt} />\n          </div>\n          <a href={`mailto:${email}`}>{email}</a>\n        </div>\n      )}\n\n      {!website ? null : (\n        <div className=\"bio-item website\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faLink} />\n          </div>\n\n          <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n            {website}\n          </a>\n        </div>\n      )}\n\n      <div className=\"social\">\n        <a href={`${config.siteUrl}/rss`} target=\"_blank\" rel=\"noopener noreferrer\">\n          <Fa icon={faRss} className=\"rss\" />\n        </a>\n\n        {!linkedin ? null : (\n          <a href={linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Fa icon={faLinkedin} className=\"linkedin\" />\n          </a>\n        )}\n\n        {!facebook ? null : (\n          <a href={facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Fa icon={faFacebook} className=\"facebook\" />\n          </a>\n        )}\n        {!instagram ? null : (\n          <a href={instagram} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Fa icon={faInstagram} className=\"instagram\" />\n          </a>\n        )}\n        {!github ? null : (\n          <a href={github} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Fa icon={faGithub} className=\"github\" />\n          </a>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Bio;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport * as React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport { FontAwesomeIcon as Fa } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/seo';\nimport Bio from '../components/Bio';\nimport './styles/index.scss';\nimport PostList from '../components/PostList';\n\ninterface IndexPageProps {\n  path: string;\n  data: any;\n}\n\nconst IndexPage = (props: IndexPageProps) => {\n  const { data } = props;\n  const posts = data.allMarkdownRemark.edges;\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <div className=\"index-wrap\">\n        <Bio />\n        <div className=\"index-post-list-wrap\">\n          <PostList posts={posts} />\n          {posts.length < 100 ? null : (\n            <div className=\"show-more-posts\">\n              <div className=\"show-more-btn\">\n                <Link to=\"/search\">\n                  <Fa icon={faSearch} />\n                  <span>SHOW MORE POSTS</span>\n                </Link>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }, limit: 100) {\n      edges {\n        node {\n          excerpt(format: PLAIN)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMM DD, YYYY\")\n            update(formatString: \"MMM DD, YYYY\")\n            title\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport * as React from 'react';\nimport { useEffect, useState, useCallback } from 'react';\nimport { Link } from 'gatsby';\nimport { throttle } from 'lodash';\n\nimport './postList.scss';\n\ninterface PostListProps {\n  posts: any[];\n}\n\nconst PostList = (props: PostListProps) => {\n  const { posts } = props;\n  const [showCnt, setShowCnt] = useState(10);\n\n  const throttleScrollHandler = useCallback(\n    throttle(() => {\n      if (\n        window.outerHeight > (document.querySelector('.post-list') as HTMLDivElement).getBoundingClientRect().bottom\n      ) {\n        setShowCnt((prev: number) => {\n          if (prev >= posts.length) return prev;\n          return prev + 10;\n        });\n      }\n    }, 250),\n    []\n  );\n\n  useEffect(() => {\n    window.addEventListener('scroll', throttleScrollHandler);\n\n    return () => {\n      window.removeEventListener('scroll', throttleScrollHandler);\n    };\n  }, []);\n\n  posts.sort((a: any, b: any) => {\n    const af = a.node.frontmatter;\n    const bf = b.node.frontmatter;\n\n    const aDate = new Date(af.update.includes('0001') ? af.date : af.update);\n    const bDate = new Date(bf.update.includes('0001') ? bf.date : bf.update);\n\n    if (aDate < bDate) return 1;\n    if (aDate > bDate) return -1;\n    return 0;\n  });\n\n  const mapPost = posts.map((post: any, i: number) => {\n    const { node } = post;\n    const { excerpt, fields, frontmatter } = node;\n    const { slug } = fields;\n    const { date, title, tags } = frontmatter;\n    let update = frontmatter.update;\n    if (Number(update.split(',')[1]) === 1) update = null;\n\n    const mapTag = tags.map((tag: string) => {\n      if (tag === 'undefined') return;\n\n      return (\n        <div key={`${slug}-${tag}`} className=\"tag\">\n          <span>\n            <Link to={`/tags#${tag}`}>{`#${tag}`}</Link>\n          </span>\n        </div>\n      );\n    });\n\n    return (\n      <li key={slug} className={`post ${i < showCnt ? 'show' : 'hide'}`}>\n        <article>\n          <h2 className=\"title\">\n            <Link to={slug}>{title}</Link>\n          </h2>\n          <div className=\"info\">\n            <div className=\"date-wrap\">\n              <span className=\"date\">{date}</span>\n              {update ? <span className=\"update\">&nbsp;{`(Updated: ${update})`}</span> : null}\n            </div>\n            {tags.length && tags[0] !== 'undefined' ? <span className=\"info-dot\">·</span> : null}\n            <ul className=\"tag-list\">{mapTag}</ul>\n          </div>\n          <span className=\"excerpt\">\n            <Link to={slug}>{excerpt}</Link>\n          </span>\n        </article>\n      </li>\n    );\n  });\n  return (\n    <div className=\"post-list\">\n      <ul>{mapPost}</ul>\n    </div>\n  );\n};\n\nexport default PostList;\n"],"sourceRoot":""}