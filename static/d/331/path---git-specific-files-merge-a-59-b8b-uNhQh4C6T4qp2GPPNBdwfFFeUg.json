{"data":{"site":{"siteMetadata":{"title":"HUNDRED","author":"Junho Baik"}},"markdownRemark":{"id":"af2015c0-68a0-5467-9702-7843f1d4d652","html":"<p>git에서 특정한 파일만 merge 하고 싶을 때가 있다.</p>\n<p>B 브랜치를 A 브랜치에 merge 하려하는데 특정 파일(./a.js)만 병합하고 싶을 상황일 때 쓸 수 있는 방법이다.</p>\n<p>정확히는 merge 키워드를 사용하지 않지만 아래 방법으로 위의 케이스를 해결할 수 있다.</p>\n<p>A 브랜치로 체크아웃한 상태에서 아래 명령을 입력한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\"language-shell\"><code class=\"language-shell\">$ git checkout -p B a.js</code></pre>\n      </div>\n<p>위 명령으로 작업을 완료 할 수 있고 아래는 이에 대한 설명이다.</p>\n<hr>\n<p><code class=\"language-text\">checkout -p</code> 여기서 p 플래그는 <code class=\"language-text\">-p|--patch</code>으로 patch 옵션을 나타낸다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\"language-shell\"><code class=\"language-shell\">$ git checkout -p B a.js</code></pre>\n      </div>\n<p>명령을 통해서 패치하겠다는 명령을 주면 변경 내용 출력과 함께 하단에 지금 작업에 반영하겠냐는 질문이 뜨는데 y를 입력해주면 된다.<br>\n아래는 그 예시이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\"language-shell\"><code class=\"language-shell\">$ git checkout -p B a.js\n\ndiff --git b/a.js a/a.js\nindex 5f133a1..31d30c1 100644\n--- b/a.js\n+++ a/a.js\n@@ -2,6 +2,7 @@ const _ = require(&#39;lodash&#39;);\n const Promise = require(&#39;bluebird&#39;);\n const path = require(&#39;path&#39;);\n+const config = require(&#39;./config&#39;);\n\n exports.createPages = ({ graphql, actions }) =&gt; {\n   const { createPage } = actions;\nApply this hunk to index and worktree [y,n,q,a,d,j,J,g,/,e,?]? y</code></pre>\n      </div>\n<p>참고로 여기서 <code class=\"language-text\">[y,n,q,a,d,j,J,g,/,e,?]</code>의 의미는 아래와 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">y - stage this hunk\nn - do not stage this hunk\nq - quit; do not stage this hunk nor any of the remaining ones\na - stage this hunk and all later hunks in the file\nd - do not stage this hunk nor any of the later hunks in the file\ng - select a hunk to go to\n/ - search for a hunk matching the given regex\nj - leave this hunk undecided, see next undecided hunk\nJ - leave this hunk undecided, see next hunk\nk - leave this hunk undecided, see previous undecided hunk\nK - leave this hunk undecided, see previous hunk\ns - split the current hunk into smaller hunks\ne - manually edit the current hunk\n? - print help</code></pre>\n      </div>","excerpt":"git에서 특정한 파일만 merge 하고 싶을 때가 있다. B 브랜치를 A 브랜치에 merge 하려하는데 특정 파일(./a.js)만 병합하고 싶을 상황일 때 쓸 수 있는 방법이다. 정확히는 merge…","frontmatter":{"title":"git 특정한 파일 병합(merge) 하기","date":"2018-11-06","tags":["git"],"keywords":["git merge","git specific merge","git specific file merge","특정 파일 merge"]}}},"pageContext":{"slug":"/git-specific-files-merge/","previous":{"fields":{"slug":"/react-16-setstate-null/"},"frontmatter":{"title":"React 16, Returning null from setState","tags":["react"],"published":true}},"next":null}}